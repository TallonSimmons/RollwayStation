@inject Store store;
@inject TrackService trackService;

<Dice AllocationType="AllocationType.Track"
      MaxAllocations="1"
      OnAllocatedEventHandler="OnDieAllocated"></Dice>
<div class="bg-green rounded col-xs-12 col-md-6 mx-auto p-3 text-center">
    <h2 class="mb-2 text-light">Track</h2>
    @foreach (var trackImage in trackImageMap)
    {
        <div class="form-inline">
            <img src="@trackImage.Value" style="height: 4vh;" />
            <input type="checkbox" class="form-control-sm ml-3" style="transform: scale(2); -webkit-transform: scale(2);" checked="@(track?.Type == trackImage.Key)" disabled />
        </div>
    }
</div>
@code {
    Track track => store.CurrentRound.TrackLaid;
    bool assigningHex;
    readonly Dictionary<TrackType, string> trackImageMap = new Dictionary<TrackType, string>
{
        {TrackType.Straight, "images/straight-track.png"},
        {TrackType.Curve, "images/wide-curve-track.png"},
        {TrackType.TightCurve, "images/tight-curve-track.png"},
    };

    void OnDieAllocated(Die die)
    {
        if (die.AllocatedTo == null)
        {
            trackService.PickUpTrack();
        }
        else
        {
            trackService.LayTrack(die);
        }

        StateHasChanged();
    }
}
